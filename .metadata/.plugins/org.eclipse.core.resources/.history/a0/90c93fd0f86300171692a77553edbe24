package codeShef;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class braceproblem {
	public static void main(String[] args) {
		List<String> myInputList = new ArrayList<>();
		Scanner scan = new Scanner(System.in);
		int testCase = scan.nextInt();
		String[] inputString = new String[testCase];
		for (int i = 0; i < testCase; i++) {
			inputString[i] = scan.next();
		}
		String output[] = braces(inputString);
		for (String string : output) {
			System.out.println(string);
		}

	}

	static String[] braces(String[] values) {
		int openBrace = 0, closeBrace = 0;
		String[] output = new String[values.length];
		for (int i = 0; i < values.length; i++) {
			for (int j = 0; j < values[i].length(); j++) {
				if (values[i].charAt(j) == '[' || values[i].charAt(j) == '{' || values[i].charAt(j) == '(') {
					openBrace++;
				}

				if (values[i].charAt(j) == ']' || values[i].charAt(j) == '}' || values[i].charAt(j) == ')') {
					closeBrace++;
				}
			}
			if (openBrace == closeBrace) {
				output[i] = "Yes";
			} else {
				output[i] = "No";
			}
		}
		return output;
	}
	
	static String[] solveBraceUsingStack(String[] values) {
		String[] output = new String[values.length];
		ArrayList<Character> charList= new ArrayList<>();
		for (String string : values) {
			char[] inChar=string.toCharArray();
			for (int i = 0; i < inChar.length; i++) {
				
			}
			
		}
		
		return output;
	}
	
}
